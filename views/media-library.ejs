<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Media Library</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"
    integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous" />
  <!-- Option 1: Include in HTML -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/hint/show-hint.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/addon/lint/lint.min.css" />
  <!-- Load icon library -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
  <!-- font-awesome icons-->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />
  <link rel="stylesheet" href="css/theme-indigo-light.css" />
  <link rel="stylesheet" href="css/style.css" />

</head>

<body>


  <!-- Upload Form -->
  <form class="upload-form" id="uploadForm">
    <div class="form-group" class="row" style="background-color: #eee;align-items: center; text-align: center;">
      <div class="row">
        <div class="col-md-12">
          <h2>Media Library</h2>
        </div>
      </div>
      <hr />
      <div class="row">
        <div class="col-md-6">
          <input type="file" id="mediaInput" name="media" accept="image/*,video/mp4" required style="width: 50%;">
        </div>
        <div class="col-md-6">
          <button type="button" class="button float-left" id="uploadButton"
            style="width: 150px; height: 50px;">Upload</button>
        </div>
      </div>
    </div>
  </form>
  <hr>
  <!-- Media Library -->
  <div class="container-fluid">

    <!-- Images -->
    <div class="row">
      <div class="col-md-12">
        <h3>Images</h3>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="media-library" id="mediaImagesLibrary"
          style="display: flex; flex-wrap: wrap; gap: 10px; padding: 10px;">
          <!-- Images will be loaded dynamically here -->
        </div>
      </div>
    </div>
    <hr />
    <!-- Videos -->
    <div class="row">
      <div class="col-md-12">
        <h3>Videos</h3>
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        <div class="media-library" id="mediaVideosLibrary"
          style="display: flex; flex-wrap: wrap; gap: 10px; padding: 10px;">
          Videos will be loaded dynamically here
        </div>
      </div>
    </div>
  </div>
  <!-- Script to fetch and render images -->
  <script>
    // Function to fetch images from the /images endpoint
    async function fetchMedia() {
      try {
        const response = await fetch('/media');
        if (!response.ok) {
          throw new Error('Failed to fetch images');
        }
        const data = await response.json();
        renderImages(data.images);
        renderVideos(data.videos);
      } catch (error) {
        console.error('Error fetching images:', error);
      }
    }

    // Function to render images in the media library
    function renderImages(images) {
      const mediaLibrary = document.getElementById('mediaImagesLibrary');
      mediaLibrary.innerHTML = ''; // Clear existing images
      images.forEach(image => {
        const mediaItem = document.createElement('div');
        mediaItem.className = 'media-item';
        mediaItem.setAttribute('data-src', `/media/img/${image}`);

        const img = document.createElement('img');
        img.src = `/media/img/${image}`;
        img.width = 150;
        img.height = 150;
        img.alt = image;

        const caption = document.createElement('p');
        caption.textContent = image;

        mediaItem.appendChild(img);
        mediaItem.appendChild(caption);

        mediaItem.addEventListener('click', () => {
          const selectedImage = mediaItem.getAttribute('data-src');
          window.opener.document.querySelector('#imageSrcInput').value = selectedImage;
          window.close();
        });

        mediaLibrary.appendChild(mediaItem);
      });
    }

    // Function to render images in the media library
    function renderVideos(videos) {
      const mediaLibrary = document.getElementById('mediaVideosLibrary');
      mediaLibrary.innerHTML = ''; // Clear existing images
      videos.forEach(video => {
        const mediaItem = document.createElement('div');
        mediaItem.className = 'media-item';
        mediaItem.setAttribute('data-src', `/media/img/${video}`);

        const vd = document.createElement('video');
        const source = document.createElement('source')
        source.src = `/media/video/${video}`;
        source.type = 'video/mp4'
        vd.width = 150;
        vd.height = 150;
        vd.autoplay = 'autoplay'
        //img.alt = image;
        vd.appendChild(source)
        const caption = document.createElement('p');
        caption.textContent = video;

        mediaItem.appendChild(vd);
        mediaItem.appendChild(caption);

        /*mediaItem.addEventListener('click', () => {
          const selectedImage = mediaItem.getAttribute('data-src');
          window.opener.document.querySelector('#imageSrcInput').value = selectedImage;
          window.close();
        });*/

        mediaLibrary.appendChild(mediaItem);
      });
    }

    // Function to handle image upload
    async function uploadMedia() {
      const uploadForm = document.getElementById('uploadForm');
      const formData = new FormData(uploadForm);
      try {
        const response = await fetch('/upload-media', {
          method: 'POST',
          body: formData,
        });

        if (!response.ok) {
          throw new Error('Failed to upload image/video');
        }

        alert('Image/Video uploaded successfully!');
        fetchMedia(); // Refresh the media library after upload

      } catch (error) {
        console.error('Error uploading image/video:', error);
        alert('Error uploading image/video');
      }
    }

    document.getElementById('uploadButton').addEventListener('click', uploadMedia);

    // Fetch and render images on page load
    fetchMedia();
  </script>
</body>

</html>